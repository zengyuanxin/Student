<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">

<!--
    springmvc
    需要什么配什么
        如果有静态资源，就需要设置默认的Servlet，如果有拦截器，那就设置<mvc:interceptor>...
-->
<!-- 1.扫描控制层组件-->
    <context:component-scan base-package="xx.ssm.controller"></context:component-scan>
<!-- 2.配置视图解析器-->
    <!--配置视图解析器-->
    <bean id="viewResolver"
          class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
        <property name="order" value="1"/>
        <property name="characterEncoding" value="UTF-8"/>
        <property name="templateEngine">
            <bean class="org.thymeleaf.spring5.SpringTemplateEngine">
                <property name="templateResolver">
                    <bean
                            class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">
                        <!-- 视图前缀 -->
                        <property name="prefix" value="/WEB-INF/templates/"/>
                        <!-- 视图后缀 -->
                        <property name="suffix" value=".html"/>
                        <property name="templateMode" value="HTML5"/>
                        <property name="characterEncoding" value="UTF-8" />
                    </bean>
                </property>
            </bean>
        </property>
    </bean>
<!-- 3.配置默认的Servlet处理静态资源-->
    <mvc:default-servlet-handler/>
<!-- 4.开启mvc注解驱动-->
    <mvc:annotation-driven/>
<!-- 5.配置视图控制器-->
    <mvc:view-controller path="/" view-name="login"></mvc:view-controller>
        <!--
            对于3、4、5：
                1.如果只配置5，没有3、4，只有视图控制器所设置的路径才会被解析，其他的写的控制层中的请求映射将全部映射不了
                2.所以要开启mvc的注解驱动（4）
                3.如果只有3，那么当前从浏览器向服务器所发送的请求，将全部由默认的Servlet进行处理，我们控制器控制器方法中所写的请求全部映射全部处理不了
                4.所以要开启mvc的注解驱动（4）
            先用DispatcherServlet处理请求，处理不了再交给默认的Servlet处理
        -->
<!-- 6.配置文件上传解析器-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"></bean>
<!-- 7.拦截器（没有可以不配置）-->
<!-- 8.异常处理器（没有可以不配置）-->
<!--    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver"></bean>-->

</beans>